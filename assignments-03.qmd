---
title: "Module 3 Programming Problems"
---

```{r}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(readxl)
assignments <- read_excel("assessment_schedule.xlsx") %>% 
  mutate(formatted_date = format(due_date, "%A, %B %d, %Y"))
```

Programming Problems should be submitted to [gradescope](https://www.gradescope.com/courses/676322).

# Programming Problem 5

**Due date: `r assignments %>% filter(assessment == "Module 3 Programming Problems") %>% pull(formatted_date)` at 7pm**

Write two python functions. The first function does the following:

1.  Its name is `kg_to_lbs`.
2.  The function *prompts the user* to enter a value in `kilos` (use the `input()` function) -- your function should take no arguments
3.  It converts the `kilos` entered to pounds (by multiplying `kilos` by 2.205)
4.  It returns the converted weight in pounds with two decimals of precision

The second function does the following:

1.  Its name is `liters_to_gallons`
2.  The function *prompts the user* to enter a value in `liters` (use the `input()` function) -- your function should take no arguments
3.  It converts the `liters` entered to gallons (divide the quantity in `liters` by 3.785)
4.  It returns the converted volume in gallons with two decimals of precision

Name the program `conversions.py`. Make sure that gradescope gives you the points for passing the test cases.

Development test cases:

```{python}
#| echo: true
#| eval: false
print("Enter 1:")
print( kg_to_lbs() ) # 2.21 

print("Enter 6:")
print( kg_to_lbs() ) # 13.23

print("Enter 120:")
print( kg_to_lbs() ) # 264.6 

print("Enter 1:")
print( liters_to_gallons() ) # 0.26 

print("Enter 3:")
print( liters_to_gallons() ) # 0.79

print("Enter 6:")
print( liters_to_gallons() ) # 1.59 
```

You can also download the [ready-to-run script](test_scripts/test_conversions.py) to test your solution.

# Programming Problem 6

**Due date: `r assignments %>% filter(assessment == "Module 3 Programming Problems") %>% pull(formatted_date)` at 7pm**

Write a python function that does the following:

1.  Its name is `is_even`
2.  It takes an input `number` from the user
3.  It returns `True` if the `number` entered is even, `False` if `number` is odd

Remember that the modulus operator (`%`) returns the remainder of an integer division. Also, `0` is interpreted as `False` and `1` as `True`.

Name the program `even.py`. Make sure that gradescope gives you the points for passing the test cases.

Development test cases:

```{python}
#| echo: true
#| eval: false
print("Enter 0:")
print( is_even() ) # True 

print("Enter 1:")
print( is_even()) # False 

print("Enter 2:")
print( is_even()) # True 

print("Enter -2:")
print( is_even()) # True 
```

You can also download the [ready-to-run script](test_scripts/test_even.py) to test your solution.
