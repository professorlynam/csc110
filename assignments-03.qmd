---
title: "Module 3 Assignments"
---

```{r}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(readxl)
assignments <- read_excel("assessment_schedule.xlsx") %>% 
  mutate(formatted_date = format(due_date, "%A, %B %d, %Y"))
```

# Short Project 02

**Due date: `r assignments %>% filter(assessment == "Module 3 Programming Problems") %>% pull(formatted_date)` at 9pm**

Short Programming projects are submitted during our weekly 45-minute in-person lab sessions. Each lab sessions is guided by two TAs. The instructions for the short project will be available only during the lab sessions. To schedule your lab session go to the weekly lab session spreadsheet in [Short Project Dates and Instructions](short-projects.html).

# Programming Problems

Programming Problems should be submitted to [gradescope](https://www.gradescope.com/courses/1044596).

**Due date: `r assignments %>% filter(assessment == "Module 3 Programming Problems") %>% pull(formatted_date)` at 9pm**

## Programming Problem 5

Write two python functions. The first function does the following:

1.  Its name is `get_digit`.
2.  This function takes an integer as input. 
3.  It returns the first digit (from the left) of a two-digit number. 

The second function `cube` takes an integer n as input. It returns the cube of that number (i.e., n * n * n).

In the `main` function, call the `get_digit` to get the number and then call `cube` to calculate the cube of that number. Finally, print the result.

Name the program `cube.py`. You are only allowed to use operations learned in the class. Make sure that gradescope gives you the points for passing the test cases.

Development test cases:

```{python}
#| echo: true
#| eval: false
print(get_digit(28)) # 2
print(get_digit(91)) # 9
print(get_digit(10)) # 1

print(cube(2)) # 8
print(cube(3)) # 27
print(cube(1)) # 1
```


## Programming Problem 6

Write a python function that does the following:

1.  Its name is `is_even`
2.  It takes an input `number` from the user
3.  It returns `True` if the `number` entered is even, `False` if `number` is odd

Remember that the modulus operator (`%`) returns the remainder of an integer division. Also, `0` is interpreted as `False` and `1` as `True`.

Name the program `even.py`. Make sure that gradescope gives you the points for passing the test cases.

Development test cases:

```{python}
#| echo: true
#| eval: false
print("Enter 0:")
print( is_even() ) # True 

print("Enter 1:")
print( is_even()) # False 

print("Enter 2:")
print( is_even()) # True 

print("Enter -2:")
print( is_even()) # True 
```

